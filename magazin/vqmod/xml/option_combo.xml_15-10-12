<modification>

	<id>Option Combination</id>

	<version>1.1.1</version>

	<vqmver>2.1.5</vqmver>

	<author>Hydrowire</author>

	<file name="system/library/cart.php">

		<operation>

			<search position="before"><![CDATA[

                data[$key] = array(

			]]></search>

			<add><![CDATA[

                $product_option_combo_setting_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination_setting WHERE product_id = '" . (int)$product_query->row['product_id'] . "'");

			    if(isset($product_option_combo_setting_query->row['status']) && $product_option_combo_setting_query->row['status'])

			    {

                    $select_option_data = array();

                    foreach($option_data as $data)

                    {

                        if($data['type'] == 'checkbox' || $data['type'] == 'radio' || $data['type'] == 'select')

                        {

                            $select_option_data[] = $data;

                        }

                    }



                    $product_option_combo_query = $this->db->query("SELECT poc.* FROM " . DB_PREFIX . "product_option_combination poc INNER JOIN " . DB_PREFIX . "product_option_combination_value pocv ON pocv.product_option_combination_id = poc.product_option_combination_id WHERE poc.product_id = '" . (int)$product_query->row['product_id'] . "' AND (poc.quantity = 0 || poc.quantity = " . $quantity . " || poc.quantity <= " . $quantity . ") AND poc.customer_group_id = '" . (int)$customer_group_id . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) GROUP BY product_option_combination_id ORDER BY COUNT(pocv.product_option_combination_id) DESC, poc.quantity DESC, poc.sort_order");



                    foreach ($product_option_combo_query->rows as $product_option_combo) {

                        $product_option_combo_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination_value pocv WHERE pocv.product_option_combination_id = '" . (int)$product_option_combo['product_option_combination_id'] . "'");

                        $count = 0;

                        $match_option_price = $match_option_weight = 0;

                        foreach($product_option_combo_value_query->rows as $product_option_combo_value)

                        {

                            foreach($select_option_data as $data)

                            {

                                if($data['option_value_id'] == $product_option_combo_value['option_value_id'])

                                {

                                    if($product_option_combo['price_prefix'] != '0')

                                    {

                                        if($data['price_prefix'] == '+')

                                        {

                                            $match_option_price -= $data['price'];

                                        } else {

                                            $match_option_price += $data['price'];

                                        }

                                    }

                                    if($product_option_combo['weight_prefix'] != '0')

                                    {

                                        if($data['weight_prefix'] == '+')

                                        {

                                            $match_option_weight -= $data['weight'];

                                        } else {

                                            $match_option_weight += $data['weight'];

                                        }

                                    }



                                    $count++;

                                    break;

                                }

                            }

                        }

                        if($count == count($product_option_combo_value_query->rows))

        		        {

                            //match

                            if($product_option_combo['price_prefix'] == '+')

                            {

                                $option_price += $product_option_combo['price'];

                            } else if($product_option_combo['price_prefix'] == '-')

                            {

                                $option_price += 0 - $product_option_combo['price'];

                            } else if($product_option_combo['price_prefix'] == '=') {

                                $option_price += $product_option_combo['price'] - $price;

                            }

                            $option_price += $match_option_price;



                            if($product_option_combo['points_prefix'] == '+')

                            {

                                $reward += $product_option_combo['points'];

                            } else if($product_option_combo['points_prefix'] == '-')

                            {

                                $reward -= $product_option_combo['points'];

                            } else if($product_option_combo['points_prefix'] == '=') {

                                $reward = $product_option_combo['points'];

                            }



                            if($product_option_combo['weight_prefix'] == '+')

                            {

                                $option_weight += $product_option_combo['weight'];

                            } else if($product_option_combo['weight_prefix'] == '-')

                            {

                                $option_weight += 0 - $product_option_combo['weight'];

                            } else if($product_option_combo['weight_prefix'] == '=') {

                                $option_weight += $product_option_combo['weight'] - $product_query->row['weight'];

                            }

                            $option_weight += $match_option_weight;



                            if ($product_option_combo['subtract'] && ($product_option_combo['stock'] == 0 || ($product_option_combo['stock'] < $quantity))) {

								$stock = false;

							}

                            break;

                        }

            		}

            	}

            ]]></add>

		</operation>

    </file>

	<file name="admin/language/romana/catalog/product.php">

		<operation>

			<search position="after"><![CDATA[

                $_['entry_layout']

			]]></search>

			<add><![CDATA[

                $_['entry_stock_available'] = 'Stock Available:';

                $_['entry_combo_option_value'] = 'Option Value:';

                $_['entry_combo_option_value_combo'] = 'Option Value Combination:';

                $_['entry_combo_stock_available'] = 'Stock Available:';

                $_['entry_combo_duration'] = 'Duration:';

                $_['entry_combo_description'] = 'Option Combination Description:';

                $_['entry_combo_table_view'] = 'Display Table View:';

                $_['entry_combo_option_view'] = 'Display Default Options:';

                $_['entry_combo_description_view'] = 'Display Option Description:';

                $_['entry_combo_price_view'] = 'Display Default Price:';

                $_['entry_combo_extax_view'] = 'Display Price Before Tax:';

                $_['entry_combo_col_select_view'] = 'Display Select Column in Table:';

                $_['entry_combo_col_quantity_view'] = 'Display Quantity Column in Table:';

                $_['entry_combo_col_price_view'] = 'Display Price Column in Table:';

                $_['entry_combo_col_total_price_view'] = 'Display Total Price Column in Table:';

                $_['entry_combo_col_points_view'] = 'Display Reward Points Column in Table:';

                $_['entry_combo_col_total_points_view'] = 'Display Total Reward Points Column in Table:';

                $_['entry_combo_status'] = 'Status:';

                $_['entry_combo_table_split'] = 'Split Table by Option:';

                $_['entry_combo_quantity_box'] = 'Display Default Quantity Box:';

                $_['tab_option_combo'] = 'Option Combination';

                $_['button_add_option_combo'] = 'Add Option Combination';

                $_['error_option_exist'] = 'Error: Please set up at least 1 Option and Save it before using Option Combination';

                $_['text_ahelp1_price_view'] = 'Since you can display the price in <b>table format</b>, the default price may be irrelevant.';

                $_['text_ahelp2_description_view'] = 'It is always good to provide more information for your customer about your latest offer on combining certain options and quantity to get the best price. You can edit <b>Option Combination Description</b> text under <b>General</b> tab.';

                $_['text_ahelp3_option_view'] = 'You can disable the default option display if you are using <b>Table View</b> with <b>Select Column</b> enabled.';

                $_['text_ahelp4_table_view'] = 'Organize option combinations into <b>tables</b>.';

                $_['text_ahelp5_col_select_view'] = 'Sometimes you may just want to show a price table, but still want your customers to use the default options.';

                $_['text_ahelp6_col_quantity_view'] = 'Enable this if <b>Quantity</b> is one of the option combination criteria.';

                $_['text_ahelp7_col_points_view'] = 'Show the <b>Reward Points <em>earn</em></b> per unit.';

                $_['text_ahelp8_col_total_points_view'] = 'Show the <em>total</em> <b>Reward Points <em>earn</em></b> based on quantity in an option combination.';

                $_['text_ahelp9_col_price_view'] = 'Show the <b>price</b> per unit.';

                $_['text_ahelp10_col_total_price_view'] = 'Show the <em>total</em> <b>price</b> based on quantity in an option combination.';

                $_['text_ahelp11_extax_view'] = 'Enabling this option will display <b>price before tax</b>.';

                $_['text_ahelp12_table_split'] = 'Only <em>Radio</em> and <em>Select</em> option type are able to split.';

                $_['text_ahelp13_quantity_box'] = 'If you are using <b>Quantity</b> as one of your option combination criteria and currently displaying it in the table, you may want to disable the default quantity field. This will also disable the quantity field in shopping cart page.';

                $_['text_chelp1_option_value'] = 'Only <em>Checkbox</em>, <em>Radio</em>, and <em>elect</em> type options that has already been setup as options in this product are available for use. Options that are not added here will work as usual and not be affected. To remove any option value, just select and click the <b>red</b> button.';

                $_['text_chelp2_stock_available'] = 'Stock availability of this option combination. Setting <b>Subtract Stock</b> to <b>Yes</b> will substract the stock of this particular option combination, main product stock is not affected.';

                $_['text_chelp3_quantity'] = 'This value will act as a criteria for this option combination where your customer must place an order equal or more than the quantity value set in order to get the price listed here. Insert <b>0</b> if not in use.';

                $_['text_chelp4_price'] = 'Value is for 1 unit. <b>Absolute</b> will disregard any other value set elsewhere. <b>Disable</b> will use use any other value set elsewhere.';

                $_['text_chelp5_points'] = 'Value is for 1 unit. <b>Absolute</b> will disregard any other value set elsewhere. <b>Disable</b> will use use any other value set elsewhere.';

                $_['text_chelp6_weight'] = 'Value is for 1 unit. <b>Absolute</b> will disregard any other value set elsewhere. <b>Disable</b> will use use any other value set elsewhere.';

                $_['text_chelp7_priority'] = 'This will affect the order of appearance on the product page and choice of option combination in case of ambiguity.';

                $_['text_chelp8_customer_group'] = 'Limit to everyone(Default) or a particular customer group.';

                $_['text_chelp9_duration'] = 'Set a time limit for this option combination. 0000-00-00 for no time limit.';

            ]]></add>

		</operation>

    </file>

	<file name="admin/model/catalog/product.php">

		<operation>

			<search position="before" index="1"><![CDATA[

                if (isset($data['product_discount'])) {

			]]></search>

			<add><![CDATA[

                if(isset($data['product_option_combination'])) {

                    foreach($data['product_option_combination'] as $product_option_combination)

                    {

                        $this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination SET product_id = '" . (int)$product_id . "', stock = '" . (int)$product_option_combination['stock'] . "', subtract = '" . (int)$product_option_combination['subtract'] . "', quantity = '" . (int)$product_option_combination['quantity'] . "', sort_order = '" . (int)$product_option_combination['sort_order'] . "', customer_group_id = '" . (int)$product_option_combination['customer_group_id'] . "', price = '" . $product_option_combination['price'] . "', price_prefix = '" . $product_option_combination['price_prefix'] . "', points = '" . (int)$product_option_combination['points'] . "', points_prefix = '" . $product_option_combination['points_prefix'] . "', weight = '" . $product_option_combination['weight'] . "', weight_prefix = '" . $product_option_combination['weight_prefix'] . "', date_start = '" . $product_option_combination['date_start'] . "', date_end = '" . $product_option_combination['date_end'] . "'");

                        if(isset($product_option_combination['option_values']))

                        {

                            $product_option_combination_id = $this->db->getLastId();

                            foreach($product_option_combination['option_values'] as $option_value)

                            {

                                $this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination_value SET product_option_combination_id = '" . (int)$product_option_combination_id . "', option_value_id = '" . (int)$option_value['option_value_id'] . "'");

                            }

                        }

                    }

                }

                if(isset($data['product_option_combination_description'])) {

                    foreach($data['product_option_combination_description'] as $lang_id => $product_option_combination_description)

                    {

                        $this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$lang_id . "', description = '" . $this->db->escape($product_option_combination_description['description']) . "'");

                    }

                }

                if(isset($data['product_option_combination_setting'])) {

                    $product_option_combination_setting = $data['product_option_combination_setting'];

                    $this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination_setting SET product_id = '" . (int)$product_id . "', price_view = '" . (int)$product_option_combination_setting['price_view'] . "', table_view = '" . (int)$product_option_combination_setting['table_view'] . "', option_view = '" . (int)$product_option_combination_setting['option_view'] . "', description_view = '" . (int)$product_option_combination_setting['description_view'] . "', col_select_view = '" . (int)$product_option_combination_setting['col_select_view'] . "', col_quantity_view = '" . (int)$product_option_combination_setting['col_quantity_view'] . "', col_price_view = '" . (int)$product_option_combination_setting['col_price_view'] . "', col_total_price_view = '" . (int)$product_option_combination_setting['col_total_price_view'] . "', col_points_view = '" . (int)$product_option_combination_setting['col_points_view'] . "', col_total_points_view = '" . (int)$product_option_combination_setting['col_total_points_view'] . "', extax_view = '" . (int)$product_option_combination_setting['extax_view'] . "', table_split = '" . (int)$product_option_combination_setting['table_split'] . "', quantity_box = '" . (int)$product_option_combination_setting['quantity_box'] . "', status = '" . (int)$product_option_combination_setting['status'] . "'");

                }

            ]]></add>

		</operation>

		<operation>

			<search position="before"><![CDATA[

                public function getProductImages($product_id) {

			]]></search>

			<add><![CDATA[

                public function getProductOptionCombos($product_id) {

                    $product_option_combo_data = array();



            		$product_option_combo_query = $this->db->query("SELECT *,cgd.name AS customer_group FROM " . DB_PREFIX . "product_option_combination poc LEFT JOIN " . DB_PREFIX . "customer_group_description cgd ON poc.customer_group_id = cgd.customer_group_id WHERE cgd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND poc.product_id = '" . (int)$product_id . "' ORDER BY poc.sort_order, poc.product_option_combination_id");



            		foreach ($product_option_combo_query->rows as $product_option_combo) {



                        $product_option_combo_value_query = $this->db->query("SELECT *,ovd.name AS ov_name,od.name AS od_name FROM " . DB_PREFIX . "product_option_combination_value pocv LEFT JOIN " . DB_PREFIX . "option_value_description ovd ON pocv.option_value_id = ovd.option_value_id LEFT JOIN " . DB_PREFIX . "option_description od ON ovd.option_id = od.option_id WHERE pocv.product_option_combination_id = '" . (int)$product_option_combo['product_option_combination_id'] . "' AND ovd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND od.language_id = '" . (int)$this->config->get('config_language_id') . "'");



                        $product_option_combo_data[] = array(

    						'product_option_combination_id'   => $product_option_combo['product_option_combination_id'],

    						'product_id'                      => $product_option_combo['product_id'],

    						'option_values'                   => $product_option_combo_value_query->rows,

    						'stock'                           => $product_option_combo['stock'],

    						'subtract'                        => $product_option_combo['subtract'],

    						'quantity'                        => $product_option_combo['quantity'],

    						'price'                           => $product_option_combo['price'],

    						'price_prefix'                    => $product_option_combo['price_prefix'],

    						'points'                          => $product_option_combo['points'],

    						'points_prefix'                   => $product_option_combo['points_prefix'],

    						'weight'                          => $product_option_combo['weight'],

    						'weight_prefix'                   => $product_option_combo['weight_prefix'],

    						'sort_order'                      => $product_option_combo['sort_order'],

    						'customer_group_id'               => $product_option_combo['customer_group_id'],

    						'customer_group'                  => $product_option_combo['customer_group'],

    						'date_start'                      => $product_option_combo['date_start'],

    						'date_end'                        => $product_option_combo['date_end'],

    					);

                    }



            		return $product_option_combo_data;

                }



                public function getProductOptionComboSetting($product_id) {

                    $product_option_combo_setting_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination_setting pocs WHERE pocs.product_id = '" . (int)$product_id . "'");



                    return $product_option_combo_setting_query->row;

                }



                public function getProductOptionComboDescription($product_id) {

                    $product_option_combo_description_data = array();



                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination_description WHERE product_id = '" . (int)$product_id . "'");



                    if($query->num_rows > 0) {

                		foreach ($query->rows as $result) {

                			$product_option_combo_description_data[$result['language_id']] = array(

                				'description'      => $result['description'],

                			);

                		}

            		}



            		return $product_option_combo_description_data;

                }

            ]]></add>

		</operation>

		<operation>

			<search position="after"><![CDATA[

                public function editProduct($product_id, $data) {

			]]></search>

			<add><![CDATA[

                if(isset($data['option_combo_status'])) {

                    $this->db->query("DELETE FROM " . DB_PREFIX . "product_option_combination_setting WHERE product_id = '" . (int)$product_id . "'");

                    $this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination_setting SET product_id = '" . (int)$product_id . "', price_view = '" . (int)$data['option_combo_price_view'] . "', table_view = '" . (int)$data['option_combo_table_view'] . "', option_view = '" . (int)$data['option_combo_option_view'] . "', description_view = '" . (int)$data['option_combo_description_view'] . "', col_select_view = '" . (int)$data['option_combo_col_select_view'] . "', col_quantity_view = '" . (int)$data['option_combo_col_quantity_view'] . "', col_price_view = '" . (int)$data['option_combo_col_price_view'] . "', col_total_price_view = '" . (int)$data['option_combo_col_total_price_view'] . "', col_points_view = '" . (int)$data['option_combo_col_points_view'] . "', col_total_points_view = '" . (int)$data['option_combo_col_total_points_view'] . "', extax_view = '" . (int)$data['option_combo_extax_view'] . "', table_split = '" . (int)$data['option_combo_table_split'] . "', quantity_box = '" . (int)$data['option_combo_quantity_box'] . "', status = '" . (int)$data['option_combo_status'] . "'");

                }

                $this->db->query("DELETE FROM " . DB_PREFIX . "product_option_combination_description WHERE product_id = '" . (int)$product_id . "'");

                foreach ($data['product_option_combination_description'] as $language_id => $value) {

        			$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$language_id . "', description = '" . $this->db->escape($value['description']) . "'");

        		}



                $this->db->query("DELETE poc,pocv FROM " . DB_PREFIX . "product_option_combination poc LEFT JOIN " . DB_PREFIX . "product_option_combination_value pocv ON poc.product_option_combination_id = pocv.product_option_combination_id WHERE product_id = '" . (int)$product_id . "'");



                if (isset($data['product_option_combo'])) {

        			foreach ($data['product_option_combo'] as $product_option_combo) {

        				if (isset($product_option_combo['product_option_combination_id'])) {

        				    $this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination SET product_option_combination_id = '" . (int)$product_option_combo['product_option_combination_id'] . "', product_id = '" . (int)$product_id . "', stock = '" . (int)$product_option_combo['stock'] . "', subtract = '" . (int)$product_option_combo['subtract'] . "', quantity = '" . (int)$product_option_combo['quantity'] . "', sort_order = '" . (int)$product_option_combo['sort_order'] . "', customer_group_id = '" . (int)$product_option_combo['customer_group_id'] . "', price = '" . $product_option_combo['price'] . "', price_prefix = '" . $product_option_combo['price_prefix'] . "', points = '" . (int)$product_option_combo['points'] . "', points_prefix = '" . $product_option_combo['points_prefix'] . "', weight = '" . $product_option_combo['weight'] . "', weight_prefix = '" . $product_option_combo['weight_prefix'] . "', date_start = '" . $product_option_combo['date_start'] . "', date_end = '" . $product_option_combo['date_end'] . "'");



                            $product_option_combination_id = $product_option_combo['product_option_combination_id'];

                        } else {

                            $this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination SET product_id = '" . (int)$product_id . "', stock = '" . (int)$product_option_combo['stock'] . "', subtract = '" . (int)$product_option_combo['subtract'] . "', quantity = '" . (int)$product_option_combo['quantity'] . "', sort_order = '" . (int)$product_option_combo['sort_order'] . "', customer_group_id = '" . (int)$product_option_combo['customer_group_id'] . "', price = '" . $product_option_combo['price'] . "', price_prefix = '" . $product_option_combo['price_prefix'] . "', points = '" . (int)$product_option_combo['points'] . "', points_prefix = '" . $product_option_combo['points_prefix'] . "', weight = '" . $product_option_combo['weight'] . "', weight_prefix = '" . $product_option_combo['weight_prefix'] . "', date_start = '" . $product_option_combo['date_start'] . "', date_end = '" . $product_option_combo['date_end'] . "'");



        					$product_option_combination_id = $this->db->getLastId();

                        }



                        if (isset($product_option_combo['product_option_combo_values'])) {

    						foreach ($product_option_combo['product_option_combo_values'] as $product_option_combo_value_id) {

    							$this->db->query("INSERT INTO " . DB_PREFIX . "product_option_combination_value SET product_option_combination_id = '" . (int)$product_option_combination_id . "', option_value_id = '" . (int)$product_option_combo_value_id . "'");

    						}

    					}

        			}

        		}

            ]]></add>

		</operation>

		<operation>

			<search position="before"><![CDATA[

                $this->addProduct($data);

			]]></search>

			<add><![CDATA[

                $data = array_merge($data, array('product_option_combination' => $this->getProductOptionCombos($product_id)));

                $data = array_merge($data, array('product_option_combination_description' => $this->getProductOptionComboDescription($product_id)));

                $data = array_merge($data, array('product_option_combination_setting' => $this->getProductOptionComboSetting($product_id)));

            ]]></add>

		</operation>

		<operation>

			<search position="after"><![CDATA[

                public function deleteProduct($product_id) {

			]]></search>

			<add><![CDATA[

                $this->db->query("DELETE FROM " . DB_PREFIX . "product_option_combination WHERE product_id = '" . (int)$product_id . "'");

                $this->db->query("DELETE FROM " . DB_PREFIX . "product_option_combination_description WHERE product_id = '" . (int)$product_id . "'");

                $this->db->query("DELETE FROM " . DB_PREFIX . "product_option_combination_setting WHERE product_id = '" . (int)$product_id . "'");

                $this->db->query("DELETE FROM " . DB_PREFIX . "product_option_combination_value WHERE product_option_combination_id NOT IN (SELECT product_option_combination_id FROM " . DB_PREFIX . "product_option_combination)");

            ]]></add>

		</operation>

    </file>

	<file name="admin/controller/catalog/product.php">

		<operation>

			<search position="after"><![CDATA[

                $this->data['entry_layout']

			]]></search>

			<add><![CDATA[

                $this->document->addScript('view/javascript/jquery/jquery.qtip-1.0.0-rc3.min.js');

                $this->data['entry_stock_available'] = $this->language->get('entry_stock_available');

                $this->data['entry_combo_option_value'] = $this->language->get('entry_combo_option_value');

                $this->data['entry_combo_option_value_combo'] = $this->language->get('entry_combo_option_value_combo');

                $this->data['entry_combo_stock_available'] = $this->language->get('entry_combo_stock_available');

                $this->data['entry_combo_duration'] = $this->language->get('entry_combo_duration');

                $this->data['entry_combo_table_view'] = $this->language->get('entry_combo_table_view');

                $this->data['entry_combo_option_view'] = $this->language->get('entry_combo_option_view');

                $this->data['entry_combo_description_view'] = $this->language->get('entry_combo_description_view');

                $this->data['entry_combo_price_view'] = $this->language->get('entry_combo_price_view');

                $this->data['entry_combo_extax_view'] = $this->language->get('entry_combo_extax_view');

                $this->data['entry_combo_description'] = $this->language->get('entry_combo_description');

                $this->data['entry_combo_col_select_view'] = $this->language->get('entry_combo_col_select_view');

                $this->data['entry_combo_col_quantity_view'] = $this->language->get('entry_combo_col_quantity_view');

                $this->data['entry_combo_col_price_view'] = $this->language->get('entry_combo_col_price_view');

                $this->data['entry_combo_col_total_price_view'] = $this->language->get('entry_combo_col_total_price_view');

                $this->data['entry_combo_col_points_view'] = $this->language->get('entry_combo_col_points_view');

                $this->data['entry_combo_col_total_points_view'] = $this->language->get('entry_combo_col_total_points_view');

                $this->data['entry_combo_status'] = $this->language->get('entry_combo_status');

                $this->data['entry_combo_table_split'] = $this->language->get('entry_combo_table_split');

                $this->data['entry_combo_quantity_box'] = $this->language->get('entry_combo_quantity_box');

                $this->data['tab_option_combo'] = $this->language->get('tab_option_combo');

                $this->data['button_add_option_combo'] = $this->language->get('button_add_option_combo');

                $this->data['error_option_exist'] = $this->language->get('error_option_exist');

                $this->data['text_ahelp1_price_view'] = $this->language->get('text_ahelp1_price_view');

                $this->data['text_ahelp2_description_view'] = $this->language->get('text_ahelp2_description_view');

                $this->data['text_ahelp3_option_view'] = $this->language->get('text_ahelp3_option_view');

                $this->data['text_ahelp4_table_view'] = $this->language->get('text_ahelp4_table_view');

                $this->data['text_ahelp5_col_select_view'] = $this->language->get('text_ahelp5_col_select_view');

                $this->data['text_ahelp6_col_quantity_view'] = $this->language->get('text_ahelp6_col_quantity_view');

                $this->data['text_ahelp7_col_points_view'] = $this->language->get('text_ahelp7_col_points_view');

                $this->data['text_ahelp8_col_total_points_view'] = $this->language->get('text_ahelp8_col_total_points_view');

                $this->data['text_ahelp9_col_price_view'] = $this->language->get('text_ahelp9_col_price_view');

                $this->data['text_ahelp10_col_total_price_view'] = $this->language->get('text_ahelp10_col_total_price_view');

                $this->data['text_ahelp11_extax_view'] = $this->language->get('text_ahelp11_extax_view');

                $this->data['text_ahelp12_table_split'] = $this->language->get('text_ahelp12_table_split');

                $this->data['text_ahelp13_quantity_box'] = $this->language->get('text_ahelp13_quantity_box');

                $this->data['text_chelp1_option_value'] = $this->language->get('text_chelp1_option_value');

                $this->data['text_chelp2_stock_available'] = $this->language->get('text_chelp2_stock_available');

                $this->data['text_chelp3_quantity'] = $this->language->get('text_chelp3_quantity');

                $this->data['text_chelp4_price'] = $this->language->get('text_chelp4_price');

                $this->data['text_chelp5_points'] = $this->language->get('text_chelp5_points');

                $this->data['text_chelp6_weight'] = $this->language->get('text_chelp6_weight');

                $this->data['text_chelp7_priority'] = $this->language->get('text_chelp7_priority');

                $this->data['text_chelp8_customer_group'] = $this->language->get('text_chelp8_customer_group');

                $this->data['text_chelp9_duration'] = $this->language->get('text_chelp9_duration');

            ]]></add>

		</operation>

		<operation>

			<search position="before"><![CDATA[

                $this->data['product_options'] = array();

			]]></search>

			<add><![CDATA[

                //description

                if (isset($this->request->post['product_option_combo_description'])) {

        			$this->data['product_option_combo_description'] = $this->request->post['product_option_combo_description'];

        		} elseif (isset($product_info)) {

        			$this->data['product_option_combo_description'] = $this->model_catalog_product->getProductOptionComboDescription($this->request->get['product_id']);

        		} else {

        			$this->data['product_option_combo_description'] = array();

        		}



                //setting

                if(!isset($this->request->get['product_id']))

                {

                    $this->request->get['product_id'] = 0;

                }

                $option_combo_setting = $this->model_catalog_product->getProductOptionComboSetting($this->request->get['product_id']);



                if (isset($this->request->post['option_combo_price_view'])) {

              		$this->data['option_combo_price_view'] = $this->request->post['option_combo_price_view'];

            	} elseif (isset($option_combo_setting['price_view'])) {

        			$this->data['option_combo_price_view'] = $option_combo_setting['price_view'];

        		} else {

              		$this->data['option_combo_price_view'] = '1';

            	}



                if (isset($this->request->post['option_combo_table_view'])) {

              		$this->data['option_combo_table_view'] = $this->request->post['option_combo_table_view'];

            	} elseif (isset($option_combo_setting['table_view'])) {

        			$this->data['option_combo_table_view'] = $option_combo_setting['table_view'];

        		} else {

              		$this->data['option_combo_table_view'] = '0';

            	}



                if (isset($this->request->post['option_combo_option_view'])) {

              		$this->data['option_combo_option_view'] = $this->request->post['option_combo_option_view'];

            	} elseif (isset($option_combo_setting['option_view'])) {

        			$this->data['option_combo_option_view'] = $option_combo_setting['option_view'];

        		} else {

              		$this->data['option_combo_option_view'] = '1';

            	}



                if (isset($this->request->post['option_combo_description_view'])) {

              		$this->data['option_combo_description_view'] = $this->request->post['option_combo_description_view'];

            	} elseif (isset($option_combo_setting['description_view'])) {

        			$this->data['option_combo_description_view'] = $option_combo_setting['description_view'];

        		} else {

              		$this->data['option_combo_description_view'] = '1';

            	}



                if (isset($this->request->post['option_combo_col_select_view'])) {

              		$this->data['option_combo_col_select_view'] = $this->request->post['option_combo_col_select_view'];

            	} elseif (isset($option_combo_setting['col_select_view'])) {

        			$this->data['option_combo_col_select_view'] = $option_combo_setting['col_select_view'];

        		} else {

              		$this->data['option_combo_col_select_view'] = '0';

            	}



                if (isset($this->request->post['option_combo_col_quantity_view'])) {

              		$this->data['option_combo_col_quantity_view'] = $this->request->post['option_combo_col_quantity_view'];

            	} elseif (isset($option_combo_setting['col_quantity_view'])) {

        			$this->data['option_combo_col_quantity_view'] = $option_combo_setting['col_quantity_view'];

        		} else {

              		$this->data['option_combo_col_quantity_view'] = '0';

            	}



                if (isset($this->request->post['option_combo_col_price_view'])) {

              		$this->data['option_combo_col_price_view'] = $this->request->post['option_combo_col_price_view'];

            	} elseif (isset($option_combo_setting['col_price_view'])) {

        			$this->data['option_combo_col_price_view'] = $option_combo_setting['col_price_view'];

        		} else {

              		$this->data['option_combo_col_price_view'] = '0';

            	}



                if (isset($this->request->post['option_combo_col_total_price_view'])) {

              		$this->data['option_combo_col_total_price_view'] = $this->request->post['option_combo_col_total_price_view'];

            	} elseif (isset($option_combo_setting['col_total_price_view'])) {

        			$this->data['option_combo_col_total_price_view'] = $option_combo_setting['col_total_price_view'];

        		} else {

              		$this->data['option_combo_col_total_price_view'] = '0';

            	}



                if (isset($this->request->post['option_combo_col_points_view'])) {

              		$this->data['option_combo_col_points_view'] = $this->request->post['option_combo_col_points_view'];

            	} elseif (isset($option_combo_setting['col_points_view'])) {

        			$this->data['option_combo_col_points_view'] = $option_combo_setting['col_points_view'];

        		} else {

              		$this->data['option_combo_col_points_view'] = '0';

            	}



                if (isset($this->request->post['option_combo_col_total_points_view'])) {

              		$this->data['option_combo_col_total_points_view'] = $this->request->post['option_combo_col_total_points_view'];

            	} elseif (isset($option_combo_setting['col_total_points_view'])) {

        			$this->data['option_combo_col_total_points_view'] = $option_combo_setting['col_total_points_view'];

        		} else {

              		$this->data['option_combo_col_total_points_view'] = '0';

            	}



                if (isset($this->request->post['option_combo_status'])) {

              		$this->data['option_combo_status'] = $this->request->post['option_combo_status'];

            	} elseif (isset($option_combo_setting['status'])) {

        			$this->data['option_combo_status'] = $option_combo_setting['status'];

        		} else {

              		$this->data['option_combo_status'] = '0';

            	}



                if (isset($this->request->post['option_combo_extax_view'])) {

              		$this->data['option_combo_extax_view'] = $this->request->post['option_combo_extax_view'];

            	} elseif (isset($option_combo_setting['extax_view'])) {

        			$this->data['option_combo_extax_view'] = $option_combo_setting['extax_view'];

        		} else {

              		$this->data['option_combo_extax_view'] = '0';

            	}



                if (isset($this->request->post['option_combo_table_split'])) {

              		$this->data['option_combo_table_split'] = $this->request->post['option_combo_table_split'];

            	} elseif (isset($option_combo_setting['table_split'])) {

        			$this->data['option_combo_table_split'] = $option_combo_setting['table_split'];

        		} else {

              		$this->data['option_combo_table_split'] = '0';

            	}



                if (isset($this->request->post['option_combo_quantity_box'])) {

              		$this->data['option_combo_quantity_box'] = $this->request->post['option_combo_quantity_box'];

            	} elseif (isset($option_combo_setting['quantity_box'])) {

        			$this->data['option_combo_quantity_box'] = $option_combo_setting['quantity_box'];

        		} else {

              		$this->data['option_combo_quantity_box'] = '1';

            	}



                /* BALAZS */

                    $this->data['product_option_optionFilter'] = array();

                    $this->data['product_option_optionValueFilter'] = array();

                    $foreachStep = 0;

                    if( ! empty( $product_options ) )

                    {

                        foreach ($product_options as $product_option)

                        {

                            $foreachStep++;

                            $this->data['product_option_optionFilter'][] = $product_option["option_id"];



                            if( ! empty( $product_option["product_option_value"] ) )

                            {

                                foreach( $product_option["product_option_value"] as $oneOptionValue )

                                {

                                    $this->data['product_option_optionValueFilter'][$product_option["option_id"]][] = $oneOptionValue["option_value_id"];

                                }

                            }

                        }

                    }

                /* EOF BALAZS */



 $someThing = "";

			    //option combo

                $this->load->model('catalog/option');



                $options = $this->model_catalog_product->getProductOptions($this->request->get['product_id']);



                $this->data['options'] = '';

                $this->data['table_split_options'] = '<option value="0">' . $this->language->get('text_disabled') . '</option>';

                foreach($options as $option)

                {

                    if($option['type'] == 'checkbox' || $option['type'] == 'radio' || $option['type'] == 'select')

                    {

                        if( in_array( $option['option_id'], $this->data['product_option_optionFilter'] ) ) // if by BALAZS

                        {

                            $this->data['options'] .= '<option value="' . $option['option_id'] . '">' . $option['name'] . '</option>';

                        }

                    }

                    if($option['type'] == 'radio' || $option['type'] == 'select')

                    {

                        $this->data['table_split_options'] .= '<option value="' . $option['option_id'] . '"' . ((isset($option_combo_setting['table_split']) && $option_combo_setting['table_split'] == $option['option_id']) ? 'selected="selected"' : '') . '>' . $option['name'] . '</option>';

                    }

                }



                $this->data['product_option_combo'] = '';



                $product_option_combos = $this->model_catalog_product->getProductOptionCombos($this->request->get['product_id']);

                $this->data['product_option_combo_count'] = count($product_option_combos);

                $this->data['product_id'] = $this->request->get['product_id'];

                $o_count = 0;

                $this->load->model('sale/customer_group');

                $customer_groups = $this->model_sale_customer_group->getCustomerGroups();

                foreach($product_option_combos as $product_option_combo)

                {

                    $this->data['product_option_combo'] .= '<tbody id="combo-row' . $o_count . '"><tr>';

                    $this->data['product_option_combo'] .= '<td class="left"><input type="hidden" name="product_option_combo[' . $o_count . '][product_option_combination_id]" value="' . $product_option_combo['product_option_combination_id'] . '" /><input type="hidden" name="product_option_combo[' . $o_count . '][product_id]" value="' . $product_option_combo['product_id'] . '" />';

                    $this->data['product_option_combo'] .= '<select name="options" id="combo-option' . $o_count . '" style="width: 200px;">'.$this->data['options'].'</select><br /><select name="option-values" id="combo-option' . $o_count . '-value" style="width: 150px;"></select>';

                    // BALAZS

                    // $this->data['product_option_combo'] .= '<input type="hidden" name="product_id" value="'.$this->request->get['product_id'].'">';

                    // EOF BALAZS

                    $this->data['product_option_combo'] .= '<a href="#" class="add-option-value-btn" name="' . $o_count . '"><img src="view/image/add.png" /></a> <a href="#" class="remove-option-value-btn" name="' . $o_count . '"><img src="view/image/delete.png" /></a>';

                    $this->data['product_option_combo'] .= '<br /><select multiple="multiple" name="product_option_combo[' . $o_count . '][product_option_combo_values][]" id="combo-option' . $o_count . '-values-selected" class="option-combo-values-selected" size="5" style="width: 200px;">';

                    $ov_count = 0;



$arrayForStamp = array();

                    foreach($product_option_combo['option_values'] as $combo_values)

                    {

$arrayForStamp[] = $combo_values['option_value_id'];

                        $this->data['product_option_combo'] .= '<option value="' . $combo_values['option_value_id'] . '">' . $combo_values['od_name'] . ' > ' . $combo_values['ov_name'] . '</option>';

                        $ov_count++;

                    }

asort( $arrayForStamp );

if( ! isset( $detectDuplicate ) )

{

        $detectDuplicate = array();

}



if( in_array( implode( "_", $arrayForStamp ), $detectDuplicate ) )

{

    $someThing .= "Duplicated: ".implode( "_", $arrayForStamp );

}

else

{

    $someThing .= ", ".implode( "_", $arrayForStamp );

    $detectDuplicate[] = implode( "_", $arrayForStamp );

}

                    $this->data['product_option_combo'] .= '</select>';

                    $this->data['product_option_combo'] .= '</td>';

                    $this->data['product_option_combo'] .= '<td class="right"><input type="text" name="product_option_combo[' . $o_count . '][stock]" value="'.$product_option_combo['stock'].'" size="3" /><br />';

                    $this->data['product_option_combo'] .= $this->language->get('entry_subtract'). '<select name="product_option_combo[' . $o_count . '][subtract]">';

                    if($product_option_combo['subtract']) {

                        $this->data['product_option_combo'] .= '<option value="1" selected="selected">'.$this->language->get('text_yes').'</option><option value="0">'.$this->language->get('text_no').'</option></select></td>';

                    } else {

                        $this->data['product_option_combo'] .= '<option value="1">'.$this->language->get('text_yes').'</option><option value="0" selected="selected">'.$this->language->get('text_no').'</option></select></td>';

                    }

                    $this->data['product_option_combo'] .= '<td class="right"><input type="text" name="product_option_combo[' . $o_count . '][quantity]" value="'.$product_option_combo['quantity'].'" size="4" /></td>';

                    $this->data['product_option_combo'] .= '<td class="right"><select name="product_option_combo[' . $o_count . '][price_prefix]">';

                    $this->data['product_option_combo'] .= '<option value="="' . ($product_option_combo['price_prefix'] == '=' ? ' selected="selected"' : '') . '>Absolute</option><option value="+"' . ($product_option_combo['price_prefix'] == '+' ? ' selected="selected"' : '') . '>+</option><option value="-"' . ($product_option_combo['price_prefix'] == '-' ? ' selected="selected"' : '') . '>-</option><option value="0"' . ($product_option_combo['price_prefix'] == '0' ? ' selected="selected"' : '') . '>Disable</option></select><input type="text" name="product_option_combo[' . $o_count . '][price]" value="'.$product_option_combo['price'].'" size="8" /></td>';

                    $this->data['product_option_combo'] .= '<td class="right"><select name="product_option_combo[' . $o_count . '][points_prefix]">';

                    $this->data['product_option_combo'] .= '<option value="="' . ($product_option_combo['points_prefix'] == '=' ? ' selected="selected"' : '') . '>Absolute</option><option value="+"' . ($product_option_combo['points_prefix'] == '+' ? ' selected="selected"' : '') . '>+</option><option value="-"' . ($product_option_combo['points_prefix'] == '-' ? ' selected="selected"' : '') . '>-</option><option value="0"' . ($product_option_combo['points_prefix'] == '0' ? ' selected="selected"' : '') . '>Disable</option></select><input type="text" name="product_option_combo[' . $o_count . '][points]" value="'.$product_option_combo['points'].'" size="8" /></td>';

                    $this->data['product_option_combo'] .= '<td class="right"><select name="product_option_combo[' . $o_count . '][weight_prefix]">';

                    $this->data['product_option_combo'] .= '<option value="="' . ($product_option_combo['weight_prefix'] == '=' ? ' selected="selected"' : '') . '>Absolute</option><option value="+"' . ($product_option_combo['weight_prefix'] == '+' ? ' selected="selected"' : '') . '>+</option><option value="-"' . ($product_option_combo['weight_prefix'] == '-' ? ' selected="selected"' : '') . '>-</option><option value="0"' . ($product_option_combo['weight_prefix'] == '0' ? ' selected="selected"' : '') . '>Disable</option></select><input type="text" name="product_option_combo[' . $o_count . '][weight]" value="'.$product_option_combo['weight'].'" size="8" /></td>';

                    $this->data['product_option_combo'] .= '<td class="right"><input type="text" name="product_option_combo[' . $o_count . '][sort_order]" value="'.$product_option_combo['sort_order'].'" size="1" /></td>';

                    $this->data['product_option_combo'] .= '<td class="right"><select name="product_option_combo[' . $o_count . '][customer_group_id]">';

                    foreach ($customer_groups as $customer_group) {

                        $this->data['product_option_combo'] .= '<option value="' . $customer_group['customer_group_id'] . '"' . ($product_option_combo['customer_group_id'] == $customer_group['customer_group_id'] ? ' selected="selected"' : '') . '>' . $customer_group['name'] . '</option>';

                    }

                    $this->data['product_option_combo'] .= '</select></td>';

                    $this->data['product_option_combo'] .= '<td class="center">'.$this->language->get('entry_date_start').'<input type="text" name="product_option_combo[' . $o_count . '][date_start]" class="date" value="'.$product_option_combo['date_start'].'" size="8" /><br /><br />'.$this->language->get('entry_date_end').'<input type="text" name="product_option_combo[' . $o_count . '][date_end]" class="date" value="'.$product_option_combo['date_end'].'" size="8" /></td>';



                    $this->data['product_option_combo'] .= '<td class="center"><a onclick="$(this).parent().parent().find(\'td\').fadeOut(\'slow\', function(){$(this).remove();});" class="button"><span>' . $this->language->get('button_remove') . '</span></a></td></tr></tbody>';



                    $o_count++;

                }



$this->data['product_option_combo'] .= '<script> console.log("Duplications result: '.$someThing.' \n "); </script>';



            ]]></add>

		</operation>

        <operation error="skip">

            <search position="replace"><![CDATA[

                public function option() {

			]]></search>

			<add><![CDATA[

                public function option_duplicate() {

            ]]></add>

		</operation>

        <operation>

            <search position="before"><![CDATA[

                public function autocomplete() {

			]]></search>

			<add><![CDATA[

            	public function option() {

            		$output = '';



            		$this->load->model('catalog/option');



                //BALAZS

                    $availableOptionValueArray = array();

                    if( ! empty( $this->request->get['product_id'] ) )

                    {

                        $this->load->model('catalog/product');

                        $options = $this->model_catalog_product->getProductOptions((int)$this->request->get['product_id']);

                        if( ! empty( $options ) )

                        {

                            foreach( $options as $oneOption )

                            {

                                if( $oneOption["product_option_id"] )

                                {

                                    if( ! empty( $oneOption["product_option_value"] ) )

                                    foreach( $oneOption["product_option_value"] as $oneProdOptValue )

                                    {

                                        $availableOptionValueArray[] = $oneProdOptValue['option_value_id'];

                                    }

                                }

                            }

                        }

                    }

                //eof BALAZS



            		$results = $this->model_catalog_option->getOptionValues($this->request->get['option_id']);



            		foreach ($results as $result)

                {

                  // BALAZS

                  if( in_array( $result['option_value_id'], $availableOptionValueArray ) )

                  {

                  // EOF BALAZS

                      $output .= '<option value="' . $result['option_value_id'] . '"';



                      if (isset($this->request->get['option_value_id']) && ($this->request->get['option_value_id'] == $result['option_value_id'])) {

                        $output .= ' selected="selected"';

                      }



                      $output .= '>' . $result['name'] . '</option>';

                  }

            		}



            		$this->response->setOutput($output);

            	}

            ]]></add>

		</operation>

    </file>

	<file name="admin/view/template/catalog/product_form.tpl">

		<operation>

            <search position="replace"><![CDATA[

                <div id="tabs" class="htabs"><a href="#tab-general"><?php echo $tab_general; ?></a><a href="#tab-data"><?php echo $tab_data; ?></a><a href="#tab-links"><?php echo $tab_links; ?></a><a href="#tab-attribute"><?php echo $tab_attribute; ?></a><a href="#tab-option"><?php echo $tab_option; ?></a>

			]]></search>

			<add><![CDATA[

                <div id="tabs" class="htabs">

                    <a href="#tab-general"><?php echo $tab_general; ?></a>

                    <a href="#tab-data"><?php echo $tab_data; ?></a>

                    <a href="#tab-links"><?php echo $tab_links; ?></a>

                    <a href="#tab-attribute"><?php echo $tab_attribute; ?></a>

                    <a href="#tab-option"><?php echo $tab_option; ?></a>

                    <a href="#tab-option-combo"><?php echo $tab_option_combo; ?></a>

            ]]></add>

		</operation>

		<operation>

            <search position="before"><![CDATA[

                <td><?php echo $entry_tag; ?></td>

			]]></search>

			<add><![CDATA[

                    <td><?php echo $entry_combo_description; ?></td>

                    <td><textarea name="product_option_combination_description[<?php echo $language['language_id']; ?>][description]" id="option_combo_description<?php echo $language['language_id']; ?>"><?php echo isset($product_option_combo_description[$language['language_id']]) ? $product_option_combo_description[$language['language_id']]['description'] : ''; ?></textarea></td>

                </tr>

                <tr>

            ]]></add>

		</operation>

        <operation>

			<search position="before"><![CDATA[

                <div id="tab-discount">

			]]></search>

			<add><![CDATA[

                <style type="text/css">

                    .list tbody td {

                        vertical-align: top;

                    }

                    .list td a img, .ahelp img, .chelp img {

                        position: relative;

                        top: 3px;

                        cursor: pointer;

                    }

                    .list td a, .ahelp, .chelp {

                        margin-left: 6px;

                    }

                </style>

                <div id="tab-option-combo">

                    <?php if($options == '') { ?>

                    <div><span class="error"><?php echo $error_option_exist; ?></span></div>

                    <?php } else { ?>

                    <div id="htab-option-combo" class="htabs">

                        <a href="#tab-option-combo-settings">Settings</a>

                        <a href="#tab-option-combo-values">Values</a>

                    </div>

                    <div id="tab-option-combo-settings">

                        <table class="form">

                            <tr>

                                <td><?php echo $entry_combo_status; ?></td>

                                <td>

                                    <select name="option_combo_status">

                                      <?php if ($option_combo_status) { ?>

                                      <option value="1" selected="selected"><?php echo $text_enabled; ?></option>

                                      <option value="0"><?php echo $text_disabled; ?></option>

                                      <?php } else { ?>

                                      <option value="1"><?php echo $text_enabled; ?></option>

                                      <option value="0" selected="selected"><?php echo $text_disabled; ?></option>

                                      <?php } ?>

                                    </select>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_price_view; ?></td>

                                <td>

                                    <?php if ($option_combo_price_view) { ?>

                                    <input type="radio" name="option_combo_price_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_price_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_price_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_price_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp1-price-view.png" class="ahelp" rel="<?php echo $text_ahelp1_price_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_description_view; ?></td>

                                <td>

                                    <?php if ($option_combo_description_view) { ?>

                                    <input type="radio" name="option_combo_description_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_description_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_description_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_description_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp2-description-view.png" class="ahelp" rel="<?php echo $text_ahelp2_description_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_option_view; ?></td>

                                <td>

                                    <?php if ($option_combo_option_view) { ?>

                                    <input type="radio" name="option_combo_option_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_option_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_option_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_option_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp3-option-view.png" class="ahelp" rel="<?php echo $text_ahelp3_option_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_table_view; ?></td>

                                <td>

                                    <?php if ($option_combo_table_view) { ?>

                                    <input type="radio" name="option_combo_table_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_table_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_table_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_table_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp4-table-view.png" class="ahelp" rel="<?php echo $text_ahelp4_table_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_col_select_view; ?></td>

                                <td>

                                    <?php if ($option_combo_col_select_view) { ?>

                                    <input type="radio" name="option_combo_col_select_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_select_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_col_select_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_select_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp5-col-select-view.png" class="ahelp" rel="<?php echo $text_ahelp5_col_select_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_col_quantity_view; ?></td>

                                <td>

                                    <?php if ($option_combo_col_quantity_view) { ?>

                                    <input type="radio" name="option_combo_col_quantity_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_quantity_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_col_quantity_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_quantity_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp6-col-quantity-view.png" class="ahelp" rel="<?php echo $text_ahelp6_col_quantity_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_col_points_view; ?></td>

                                <td>

                                    <?php if ($option_combo_col_points_view) { ?>

                                    <input type="radio" name="option_combo_col_points_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_points_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_col_points_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_points_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp7-col-points-view.png" class="ahelp" rel="<?php echo $text_ahelp7_col_points_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_col_total_points_view; ?></td>

                                <td>

                                    <?php if ($option_combo_col_total_points_view) { ?>

                                    <input type="radio" name="option_combo_col_total_points_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_total_points_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_col_total_points_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_total_points_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp8-col-total-points-view.png" class="ahelp" rel="<?php echo $text_ahelp8_col_total_points_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_col_price_view; ?></td>

                                <td>

                                    <?php if ($option_combo_col_price_view) { ?>

                                    <input type="radio" name="option_combo_col_price_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_price_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_col_price_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_price_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp9-col-price-view.png" class="ahelp" rel="<?php echo $text_ahelp9_col_price_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_col_total_price_view; ?></td>

                                <td>

                                    <?php if ($option_combo_col_total_price_view) { ?>

                                    <input type="radio" name="option_combo_col_total_price_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_total_price_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_col_total_price_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_col_total_price_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp10-col-total-price-view.png" class="ahelp" rel="<?php echo $text_ahelp10_col_total_price_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_extax_view; ?></td>

                                <td>

                                    <?php if ($option_combo_extax_view) { ?>

                                    <input type="radio" name="option_combo_extax_view" value="1" checked="checked" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_extax_view" value="0" />

                                    <?php echo $text_no; ?>

                                    <?php } else { ?>

                                    <input type="radio" name="option_combo_extax_view" value="1" />

                                    <?php echo $text_yes; ?>

                                    <input type="radio" name="option_combo_extax_view" value="0" checked="checked" />

                                    <?php echo $text_no; ?>

                                    <?php } ?>

                                    <a href="view/image/combo-help/ahelp11-extax-view.png" class="ahelp" rel="<?php echo $text_ahelp11_extax_view; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_table_split; ?></td>

                                <td>

                                    <select name="option_combo_table_split">

                                        <?php echo $table_split_options; ?>

                                    </select>

                                    <a href="view/image/combo-help/ahelp12-table-split.png" class="ahelp" rel="<?php echo $text_ahelp12_table_split; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                            <tr>

                                <td><?php echo $entry_combo_quantity_box; ?></td>

                                <td>

                                    <select name="option_combo_quantity_box">

                                      <?php if ($option_combo_quantity_box) { ?>

                                      <option value="1" selected="selected"><?php echo $text_enabled; ?></option>

                                      <option value="0"><?php echo $text_disabled; ?></option>

                                      <?php } else { ?>

                                      <option value="1"><?php echo $text_enabled; ?></option>

                                      <option value="0" selected="selected"><?php echo $text_disabled; ?></option>

                                      <?php } ?>

                                    </select>

                                    <a href="view/image/combo-help/ahelp13-quantity-box.png" class="ahelp" rel="<?php echo $text_ahelp13_quantity_box; ?>"><img src="view/image/question-balloon.png" /></a>

                                </td>

                            </tr>

                        </table>

                    </div>

                    <div id="tab-option-combo-values">

                        <table id="option-combo" class="list">

                            <thead>

                              <tr>

                                <td class="left"><?php echo $entry_option_value; ?><a class="chelp" rel="<?php echo $text_chelp1_option_value; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="right"><?php echo $entry_stock_available; ?><a class="chelp" rel="<?php echo $text_chelp2_stock_available; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="right"><?php echo $entry_quantity; ?><a class="chelp" rel="<?php echo $text_chelp3_quantity; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="right"><?php echo $entry_price; ?><a class="chelp" rel="<?php echo $text_chelp4_price; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="right"><?php echo $entry_option_points; ?><a class="chelp" rel="<?php echo $text_chelp5_points; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="right"><?php echo $entry_weight; ?><a class="chelp" rel="<?php echo $text_chelp6_weight; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="right"><?php echo $entry_priority; ?><a class="chelp" rel="<?php echo $text_chelp7_priority; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="left"><?php echo $entry_customer_group; ?><a class="chelp" rel="<?php echo $text_chelp8_customer_group; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="left"><?php echo $entry_combo_duration; ?><a class="chelp" rel="<?php echo $text_chelp9_duration; ?>"><img src="view/image/question-balloon.png" /></a></td>

                                <td class="left"></td>

                              </tr>

                            </thead>

                            <?php echo $product_option_combo; ?>

                            <tfoot>

                                <tr><td colspan="10" class="right"><a onclick="add_combo();" class="button"><span><?php echo $button_add_option_combo; ?></span></a></td></tr>

                            </tfoot>

                        </table>

                    </div>

                <?php } ?>

                </div>

            ]]></add>

		</operation>

        <operation>

			<search position="before"><![CDATA[

                CKEDITOR.replace('description<?php echo $language['language_id']; ?>', {

			]]></search>

			<add><![CDATA[

                CKEDITOR.replace('option_combo_description<?php echo $language['language_id']; ?>', {

                	filebrowserBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',

                	filebrowserImageBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',

                	filebrowserFlashBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',

                	filebrowserUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',

                	filebrowserImageUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',

                	filebrowserFlashUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>'

                });

            ]]></add>

		</operation>

        <operation>

			<search position="before"><![CDATA[

                <?php echo $footer; ?>

			]]></search>

			<add><![CDATA[

                <script type="text/javascript"><!--

                $("select[name='options']").live('change', function() {

                    var this_option = $(this);

                    var option_id = $(this).val();

                    //var product_id = $("input[name='product_id']").val();

                    // BALAZS

                    var thisRowNumber = $(this_option).attr("id").substring( 12 );

                    var product_id = $("input[name='product_option_combo[" + thisRowNumber + "][product_id]']").val();

                    $.ajax({

            			url: 'index.php?route=catalog/product/option&token=<?php echo $token; ?>&option_id=' + option_id + '&product_id=' + product_id,

            			type: 'GET',

            			dataType: 'html',

            			success: function(data) {

                            $("#" + $(this_option).attr("id") + "-value").html(data);

            			}

            		});

                }).change();

                $("a.add-option-value-btn").live('click', function() {

                    var option_value_val = $("#combo-option" + $(this).attr("name") + "-value option:selected").val();

                    var option_html = $("#combo-option" + $(this).attr("name") + " option:selected").html() + " > " + $("#combo-option" + $(this).attr("name") + "-value option:selected").html();

                    var exist = false;

                    var option_value_count = 0;

                    $("#combo-option" + $(this).attr("name") + "-values-selected option").each(function() {

                        if($(this).val() == option_value_val)

                        {

                            exist = true;

                            return false;

                        }

                        option_value_count++;

                    });

                    if(!exist)

                    {

                        $("#combo-option" + $(this).attr("name") + "-values-selected").append('<option value="' + option_value_val + '">' + option_html + '</option>');

                    }

                    return false;

                });

                $("a.remove-option-value-btn").live('click', function() {

                    $("#combo-option" + $(this).attr("name") + "-values-selected option:selected").remove();

                    return false;

                });

                var combo_row = <?php echo $product_option_combo_count; ?>;



                function add_combo()

                {

                    var html = '<tbody id="combo-row' + combo_row + '"><tr>';

                    html += '<td class="left"><input type="hidden" name="product_option_combo[' + combo_row + '][product_id]" value="<?php echo $product_id; ?>" />';

                    html += '<select name="options" id="combo-option' + combo_row + '" style="width: 200px;"><?php echo $options; ?></select><br /><select name="option-values" id="combo-option' + combo_row + '-value" style="width: 150px;"></select>';

                    html += '<a href="#" class="add-option-value-btn" name="' + combo_row + '"><img src="view/image/add.png" /></a> <a href="#" class="remove-option-value-btn" name="' + combo_row + '"><img src="view/image/delete.png" /></a>';

                    html += '<br /><select multiple="multiple" name="product_option_combo[' + combo_row + '][product_option_combo_values][]" id="combo-option' + combo_row + '-values-selected" class="option-combo-values-selected" size="5" style="width: 200px;"></select></td>';

                    html += '<td class="right"><input type="text" name="product_option_combo[' + combo_row + '][stock]" value="0" size="3" /><br />';

                    html += '<?php echo $entry_subtract; ?><select name="product_option_combo[' + combo_row + '][subtract]">';

                    html += '<option value="1"><?php echo $text_yes; ?></option><option value="0"><?php echo $text_no; ?></option></select></td>';

                    html += '<td class="right"><input type="text" name="product_option_combo[' + combo_row + '][quantity]" value="0" size="4" /></td>';

                    html += '<td class="right"><select name="product_option_combo[' + combo_row + '][price_prefix]">';

                    html += '<option value="=">Absolute</option><option value="+">+</option><option value="-">-</option><option value="0">Disable</option></select><input type="text" name="product_option_combo[' + combo_row + '][price]" value="0" size="8" /></td>';

                    html += '<td class="right"><select name="product_option_combo[' + combo_row + '][points_prefix]">';

                    html += '<option value="=">Absolute</option><option value="+">+</option><option value="-">-</option><option value="0">Disable</option></select><input type="text" name="product_option_combo[' + combo_row + '][points]" value="0" size="8" /></td>';

                    html += '<td class="right"><select name="product_option_combo[' + combo_row + '][weight_prefix]">';

                    html += '<option value="=">Absolute</option><option value="+">+</option><option value="-">-</option><option value="0">Disable</option></select><input type="text" name="product_option_combo[' + combo_row + '][weight]" value="0" size="8" /></td>';

                    html += '<td class="right"><input type="text" name="product_option_combo[' + combo_row + '][sort_order]" value="0" size="1" /></td>';

                    html += '<td class="right"><select name="product_option_combo[' + combo_row + '][customer_group_id]">';

                    <?php foreach ($customer_groups as $customer_group) { ?>

                    html += '<option value="<?php echo $customer_group['customer_group_id']; ?>"><?php echo $customer_group['name']; ?></option>';

                    <?php } ?>

                    html += '</select></td>';

                    html += '<td class="center"><?php echo $entry_date_start; ?><input type="text" name="product_option_combo[' + combo_row + '][date_start]" class="date" value="0000-00-00" size="8" /><br /><br /><?php echo $entry_date_end; ?><input type="text" name="product_option_combo[' + combo_row + '][date_end]" class="date" value="0000-00-00" size="8" /></td>';

                    html += '<td class="center"><a onclick="$(this).parent().parent().find(\'td\').fadeOut(\'slow\', function(){$(this).remove();});" class="button"><span><?php echo $button_remove; ?></span></a></td></tr></tbody>';

                    html += '</tr></tbody>';



                    $('#option-combo tfoot').before(html);

                    $('select#combo-option' + combo_row).change();



	                $('#combo-row' + combo_row + ' .date').datepicker({dateFormat: 'yy-mm-dd'});



                    combo_row++;

                }

                $('#htab-option-combo a').tabs();

                $("#form").submit(function() {

                    $(".option-combo-values-selected option").each(function() {

                         $(this).attr("selected", "selected");

                    });

                });



                $('.ahelp').each( function() {

                    var href = "";

                    var extra = "";

                    if($(this).attr('href') != undefined)

                    {

                        href = '<img src="' + $(this).attr('href') + '" />';

                    }

                    if($(this).attr('rel') != undefined)

                    {

                        extra = '<p>' + $(this).attr('rel') + '</p>';

                    }



                    $(this).qtip({

                        content: href + extra,

                        position: {

                            corner: {

                                target: 'rightMiddle',

                                tooltip: 'leftMiddle'

                            }

                        },

                        style: {

                            tip: 'leftMiddle',

                            width: 520,

                            border: { color: "#AAAAAA" },

                            background: "#FFFFFF",

                        },

                    }).click(function() {

                        return false;

                    });

                });

                $('.chelp').each( function() {

                    var href = "";

                    var extra = "";

                    if($(this).attr('href') != undefined)

                    {

                        href = '<img src="' + $(this).attr('href') + '" />';

                    }

                    if($(this).attr('rel') != undefined)

                    {

                        extra = '<p>' + $(this).attr('rel') + '</p>';

                    }



                    $(this).qtip({

                        content: href + extra,

                        position: {

                            corner: {

                                target: 'topMiddle',

                                tooltip: 'bottomMiddle'

                            }

                        },

                        style: {

                            tip: 'bottomMiddle',

                            border: { color: "#AAAAAA" },

                            background: "#FFFFFF",

                        },

                    }).click(function() {

                        return false;

                    });

                });



                //--></script>

            ]]></add>

		</operation>

    </file>

	<file name="catalog/model/catalog/product.php">

		<operation>

			<search position="before"><![CDATA[

                public function getProductDiscounts($product_id) {

			]]></search>

			<add><![CDATA[

			    public function getProductOptionCombos($product_id) {

                    $product_option_combo_data = array();



            		if ($this->customer->isLogged()) {

            			$customer_group_id = $this->customer->getCustomerGroupId();

            		} else {

            			$customer_group_id = $this->config->get('config_customer_group_id');

            		}



            		$product_option_combo_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination poc WHERE poc.product_id = '" . (int)$product_id . "' AND poc.customer_group_id = '" . (int)$customer_group_id . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) ORDER BY poc.sort_order");



            		foreach ($product_option_combo_query->rows as $product_option_combo) {

                        $temp_td = array();



                        $product_option_combo_value_query = $this->db->query("SELECT *,ovd.name AS ov_name,od.name AS od_name,pov.price AS pov_price,pov.price_prefix AS pov_price_prefix FROM " . DB_PREFIX . "product_option_combination_value pocv LEFT JOIN " . DB_PREFIX . "option_value_description ovd ON pocv.option_value_id = ovd.option_value_id LEFT JOIN " . DB_PREFIX . "product_option_value pov ON pov.product_id = '" . (int)$product_id . "' AND pov.option_value_id = ovd.option_value_id LEFT JOIN `" . DB_PREFIX . "option` o ON ovd.option_id = o.option_id LEFT JOIN " . DB_PREFIX . "option_description od ON ovd.option_id = od.option_id WHERE pocv.product_option_combination_id = '" . (int)$product_option_combo['product_option_combination_id'] . "' AND ovd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND od.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY o.sort_order");



                        $option_price_total = 0;



    					foreach($product_option_combo_value_query->rows as $product_option_combo_value)

    					{

                            $temp_td[$product_option_combo_value['option_id']][$product_option_combo_value['option_value_id']] = $product_option_combo_value['ov_name'];



                            if($product_option_combo_value['pov_price_prefix'] == '+')

                            {

                                $option_price_total += $product_option_combo_value['pov_price'];

                            } else {

                                $option_price_total -= $product_option_combo_value['pov_price'];

                            }

                        }



                        $product_option_combo_data[] = array(

    						'product_option_combination_id'   => $product_option_combo['product_option_combination_id'],

    						'product_id'                      => $product_option_combo['product_id'],

    						'option_values'                   => $temp_td,

    						'stock'                           => $product_option_combo['stock'],

    						'subtract'                        => $product_option_combo['subtract'],

    						'quantity'                        => $product_option_combo['quantity'],

				            'option_price_total'              => $option_price_total,

    						'price'                           => $product_option_combo['price'],

    						'price_prefix'                    => $product_option_combo['price_prefix'],

    						'points'                          => $product_option_combo['points'],

    						'points_prefix'                   => $product_option_combo['points_prefix'],

    						'weight'                          => $product_option_combo['weight'],

    						'weight_prefix'                   => $product_option_combo['weight_prefix'],

    						'sort_order'                      => $product_option_combo['sort_order'],

    						'customer_group_id'               => $product_option_combo['customer_group_id'],

    						'date_start'                      => $product_option_combo['date_start'],

    						'date_end'                        => $product_option_combo['date_end'],

    					);

                    }



                    return $product_option_combo_data;

                }



                public function getProductOptionComboHeaders($product_option_combo_data)

                {

                    $headers = array();

                    $options = array();

                    $combo_options = array();



                    foreach($product_option_combo_data as $product_option_combo)

                    {

                        foreach($product_option_combo['option_values'] as $option_id => $option_value)

                        {

                            $combo_options[$option_id] = $option_value;

                        }

                    }



                    $option_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "option` o LEFT JOIN " . DB_PREFIX . "option_description od ON o.option_id = od.option_id WHERE od.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY o.sort_order");

                    foreach($option_query->rows as $option)

                    {

                        foreach($combo_options as $option_id => $combo_option)

                        {

                             if($option_id == $option['option_id'])

                             {

                                  $options[] = $option;

                             }

                        }

                    }





                    return $options;

                }



			    public function getProductOptionComboSetting($product_id) {

                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination_setting pocs WHERE pocs.product_id = '" . (int)$product_id . "'");



                    return $query->row;

                }



                public function getProductOptionComboDescription($product_id) {

                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination_description WHERE product_id = '" . (int)$product_id . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");



            		return $query->row;

                }



                public function getProductOptionComboValues($product_id, $product_option_combination_id) {

                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination_value WHERE product_option_combination_id = '" . (int)$product_option_combination_id . "'");



                    $product_option_id = array();



                    foreach($query->rows as $option_value)

                    {

                        $product_options_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value pov LEFT JOIN `" . DB_PREFIX . "option` o ON o.option_id = pov.option_id WHERE pov.product_id = '" . (int)$product_id . "' AND pov.option_value_id = '" . (int)$option_value['option_value_id'] . "'");

                        if($product_options_query->num_rows) {

                            if($product_options_query->row['type'] == 'checkbox')

                            {

                                $product_option_id[$product_options_query->row['product_option_id']][] = $product_options_query->row['product_option_value_id'];

                            } else {

                                $product_option_id[$product_options_query->row['product_option_id']] = $product_options_query->row['product_option_value_id'];

                            }

                        }

                    }



            		return $product_option_id;

                }



                public function getProductOptionCombo($product_option_combination_id) {

                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination WHERE product_option_combination_id = '" . (int)$product_option_combination_id . "'");



                    return $query->row;

                }



                public function getOptionValues($option_id) {

                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "option_value WHERE option_id = '" . (int)$option_id . "' ORDER BY sort_order");



                    return $query->rows;

                }

            ]]></add>

		</operation>

    </file>

    <file name="catalog/language/romana/product/product.php">

		<operation>

			<search position="after"><![CDATA[

                $_['text_error']

			]]></search>

			<add><![CDATA[

                $_['text_col_quantity'] = 'Cantitate';

                $_['text_col_points'] = 'Puncte';

                $_['text_col_total_points'] = 'Total puncte';

                $_['text_col_price'] = 'Pret';

                $_['text_col_total_price'] = 'Pret total';

                $_['error_option_combo'] = 'Selectati cel putin 1 optiune!';

            ]]></add>

		</operation>

    </file>

	<file name="catalog/controller/product/product.php">

		<operation>

			<search position="before"><![CDATA[

                if ($product_info['minimum']) {

			]]></search>

			<add><![CDATA[$this->data['error_option_combo'] = $this->language->get('error_option_combo');

			    $option_combo_setting = $this->model_catalog_product->getProductOptionComboSetting($this->request->get['product_id']);



                if(isset($option_combo_setting['status']) && $option_combo_setting['status'])

                {

                    $this->data['text_col_quantity'] = $this->language->get('text_col_quantity');

                    $this->data['text_col_points'] = $this->language->get('text_col_points');

                    $this->data['text_col_total_points'] = $this->language->get('text_col_total_points');

                    $this->data['text_col_price'] = $this->language->get('text_col_price');

                    $this->data['text_col_total_price'] = $this->language->get('text_col_total_price');



    			    $this->data['option_combo_table_view'] = $option_combo_setting['table_view'];

    			    $this->data['option_combo_option_view'] = $option_combo_setting['option_view'];

    			    $this->data['option_combo_description_view'] = $option_combo_setting['description_view'];

                    $this->data['option_combo_col_select_view'] = $option_combo_setting['col_select_view'];

                    $this->data['option_combo_col_quantity_view'] = $option_combo_setting['col_quantity_view'];

                    $this->data['option_combo_col_price_view'] = $option_combo_setting['col_price_view'];

                    $this->data['option_combo_col_total_price_view'] = $option_combo_setting['col_total_price_view'];

                    $this->data['option_combo_extax_view'] = $option_combo_setting['extax_view'];

                    $this->data['option_combo_col_points_view'] = $option_combo_setting['col_points_view'];

                    $this->data['option_combo_col_total_points_view'] = $option_combo_setting['col_total_points_view'];

                    $this->data['option_combo_table_split'] = $option_combo_setting['table_split'];

                    $this->data['option_combo_quantity_box'] = $option_combo_setting['quantity_box'];

                    $this->data['option_combo_status'] = $option_combo_setting['status'];



                    if(!$option_combo_setting['price_view'])

                    {

                        $this->data['price'] = false;

                    }



                    if($option_combo_setting['description_view'])

                    {

                        $option_combo_description = $this->model_catalog_product->getProductOptionComboDescription($this->request->get['product_id']);

                        $this->data['option_combo_description'] = html_entity_decode($option_combo_description['description'], ENT_QUOTES, 'UTF-8');

                    }



    			    $product_option_combos = $this->model_catalog_product->getProductOptionCombos($this->request->get['product_id']);



                    $product_option_combo_headers = $this->model_catalog_product->getProductOptionComboHeaders($product_option_combos);



                    //table split

                    $table_split_option_combos = array();

                    $table_split_options = array();

                    if($option_combo_setting['table_split'])

                    {

                        foreach($product_option_combos as $key => $product_option_combo)

    			        {

                            foreach($product_option_combo['option_values'] as $option_id => $combo_option_value)

        			        {

                                if($option_id == $option_combo_setting['table_split'])

                                {

                                    $temp_keys = array_keys($combo_option_value);

                                    if($product_option_combos[$key]['price_prefix'] == '+')

                                    {

                                        $product_option_combo['price'] += $product_info['price'];

                                    } else if($product_option_combos[$key]['price_prefix'] == '-')

                                    {

                                        $product_option_combo['price'] = $product_info['price'] - $product_option_combo['price'];

                                    } else if($product_option_combos[$key]['price_prefix'] == '0')

                                    {

                                        $product_option_combo['price'] = $product_info['price'] + $product_option_combo['option_price_total'];

                                    }

                                    $product_option_combo['total_price'] = $product_option_combo['price'];

                                    if($product_option_combos[$key]['quantity'] > 0)

                                    {

                                        $product_option_combo['total_price'] = $product_option_combo['price'] * $product_option_combos[$key]['quantity'];

                                    }

                                    $product_option_combos[$key]['price'] = $this->currency->format($this->tax->calculate($product_option_combo['price'], $product_info['tax_class_id'], $this->config->get('config_tax')));

                                    $product_option_combos[$key]['total_price'] = $this->currency->format($this->tax->calculate($product_option_combo['total_price'], $product_info['tax_class_id'], $this->config->get('config_tax')));

                                    $product_option_combos[$key]['extax'] = $this->currency->format($product_option_combo['price']);

                                    $product_option_combos[$key]['total_extax'] = $this->currency->format($product_option_combo['total_price']);



                                    if($product_option_combos[$key]['points_prefix'] == '+')

                                    {

                                        $product_option_combo['points'] += $product_info['reward'];

                                    } else if($product_option_combos[$key]['points_prefix'] == '-')

                                    {

                                        $product_option_combo['points'] = $product_info['reward'] - $product_option_combo['points'];

                                    } else if($product_option_combos[$key]['points_prefix'] == '0')

                                    {

                                        $product_option_combo['points'] = $product_info['reward'];

                                    }

                                    $product_option_combo['total_points'] = $product_option_combo['points'];

                                    if($product_option_combos[$key]['quantity'] > 0)

                                    {

                                        $product_option_combo['total_points'] = $product_option_combo['points'] * $product_option_combos[$key]['quantity'];

                                    }

                                    $product_option_combos[$key]['points'] = $product_option_combo['points'];

                                    $product_option_combos[$key]['total_points'] = $product_option_combo['total_points'];

                                    $table_split_option_combos[$temp_keys[0]][] = $product_option_combos[$key];

                                    $table_split_options += $combo_option_value;

                                }

        			        }

    			        }

    			        $option_values = $this->model_catalog_product->getOptionValues($option_combo_setting['table_split']);

                        $table_split_option_combos_sorted = array();

                        $table_split_options_sorted = array();

                        foreach($option_values as $option_value)

                        {

                            if(isset($table_split_option_combos[$option_value['option_value_id']]) && isset($table_split_options[$option_value['option_value_id']]))

                            {

                                $table_split_option_combos_sorted[$option_value['option_value_id']] = $table_split_option_combos[$option_value['option_value_id']];

                                $table_split_options_sorted[$option_value['option_value_id']] = $table_split_options[$option_value['option_value_id']];

                            }

                        }



                        $this->data['table_split_option_combos'] = $table_split_option_combos_sorted;

                        $this->data['table_split_options'] = $table_split_options_sorted;

                    } else {

                        foreach($product_option_combos as $key => $product_option_combo)

        			    {

                            $this->data['product_option_combos'][$key] = $product_option_combo;

                            if($this->data['product_option_combos'][$key]['price_prefix'] == '+')

                            {

                                $product_option_combo['price'] += $product_info['price'];

                            } else if($this->data['product_option_combos'][$key]['price_prefix'] == '-')

                            {

                                $product_option_combo['price'] = $product_info['price'] - $product_option_combo['price'];

                            } else if($this->data['product_option_combos'][$key]['price_prefix'] == '0')

                            {

                                $product_option_combo['price'] = $product_info['price'] + $product_option_combo['option_price_total'];

                            }

                            $product_option_combo['total_price'] = $product_option_combo['price'];

                            if($product_option_combo['quantity'] > 0)

                            {

                                $product_option_combo['total_price'] = $product_option_combo['price'] * $product_option_combo['quantity'];

                            }

                            $this->data['product_option_combos'][$key]['price'] = $this->currency->format($this->tax->calculate($product_option_combo['price'], $product_info['tax_class_id'], $this->config->get('config_tax')));

                            $this->data['product_option_combos'][$key]['total_price'] = $this->currency->format($this->tax->calculate($product_option_combo['total_price'], $product_info['tax_class_id'], $this->config->get('config_tax')));

                            $this->data['product_option_combos'][$key]['extax'] = $this->currency->format($product_option_combo['price']);

                            $this->data['product_option_combos'][$key]['total_extax'] = $this->currency->format($product_option_combo['total_price']);



                            if($this->data['product_option_combos'][$key]['points_prefix'] == '+')

                            {

                                $product_option_combo['points'] += $product_info['reward'];

                            } else if($this->data['product_option_combos'][$key]['points_prefix'] == '-')

                            {

                                $product_option_combo['points'] = $product_info['reward'] - $product_option_combo['points'];

                            } else if($this->data['product_option_combos'][$key]['points_prefix'] == '0')

                            {

                                $product_option_combo['points'] = $product_info['reward'];

                            }

                            $product_option_combo['total_points'] = $product_option_combo['points'];

                            if($product_option_combo['quantity'] > 0)

                            {

                                $product_option_combo['total_points'] = $product_option_combo['points'] * $product_option_combo['quantity'];

                            }

                            $this->data['product_option_combos'][$key]['points'] = $product_option_combo['points'];

                            $this->data['product_option_combos'][$key]['total_points'] = $product_option_combo['total_points'];

                        }

                    }

                    $this->data['product_option_combo_headers'] = $product_option_combo_headers;

                }

            ]]></add>

		</operation>

    </file>

	<file name="catalog/view/theme/*/template/product/product.tpl">

		<operation>

			<search position="after"><![CDATA[

                <h2><?php echo $text_option; ?></h2>

			]]></search>

			<add><![CDATA[

                <?php if(isset($option_combo_description)) { ?>

                    <?php echo $option_combo_description; ?>

                <?php } ?>

            ]]></add>

		</operation>

		<operation>

			<search position="replace"><![CDATA[

                <?php if ($option['type'] == 'select') { ?>

			]]></search>

			<add><![CDATA[

                <?php if (((isset($option_combo_option_view) && $option_combo_option_view) || !isset($option_combo_option_view)) && $option['type'] == 'select') { ?>

            ]]></add>

		</operation>

		<operation>

			<search position="replace"><![CDATA[

                <?php if ($option['type'] == 'radio') { ?>

			]]></search>

			<add><![CDATA[

                <?php if (((isset($option_combo_option_view) && $option_combo_option_view) || !isset($option_combo_option_view)) && $option['type'] == 'radio') { ?>

            ]]></add>

		</operation>

		<operation>

			<search position="replace"><![CDATA[

                <?php if ($option['type'] == 'checkbox') { ?>

			]]></search>

			<add><![CDATA[

                <?php if (((isset($option_combo_option_view) && $option_combo_option_view) || !isset($option_combo_option_view)) && $option['type'] == 'checkbox') { ?>

            ]]></add>

		</operation>

		<operation>

			<search position="before" offset="2"><![CDATA[

                <div class="cart">

			]]></search>

			<add><![CDATA[

                <?php if(isset($option_combo_table_view) && $option_combo_table_view) { ?>

                <style type="text/css">

                .option-combo {

                    margin: 4px 0 8px;

                    width: 100%;

                    border-collapse: collapse;

                }

                .option-combo tr th,.option-combo tr td {

                    border: 1px solid #ddd;

                    padding: 6px;

                    vertical-align: top;

                }

                .option-combo tr td ul {

                    list-style: none;

                    padding: 0;

                    margin: 0;

                }

                .option-combo tr td ul li {

                    padding: 2px 0;

                }

                .option-combo tr td.ta-center, .option-combo tr th {

                    text-align: center;

                }

                .option-combo tr td.ta-right {

                    text-align: right;

                }

                </style>

                <?php if($option_combo_table_split) { ?>

                <?php foreach($table_split_option_combos as $option_vid => $data) { ?>

                    <?php foreach($product_option_combo_headers as $header_option_id => $header) { ?>

                        <?php if($header['option_id'] == $option_combo_table_split) { ?>

                        <strong><?php echo $header['name'] . ': ' . $table_split_options[$option_vid]; ?></strong>

                        <?php } ?>

                    <?php } ?>

                    <table class="option-combo">

                        <tr>

                        <?php if($option_combo_col_select_view) { ?>

                        <th></th>

                        <?php } ?>

                        <?php foreach($product_option_combo_headers as $header) { ?>

                            <?php if($header['option_id'] != $option_combo_table_split) { ?>

                            <th><?php echo $header['name']; ?></th>

                            <?php } ?>

                        <?php } ?>

                        <?php if($option_combo_col_quantity_view) { ?>

                        <th><?php echo $text_col_quantity; ?></th>

                        <?php } ?>

                        <?php if($option_combo_col_points_view) { ?>

                        <th><?php echo $text_col_points; ?></th>

                        <?php } ?>

                        <?php if($option_combo_col_total_points_view) { ?>

                        <th><?php echo $text_col_total_points; ?></th>

                        <?php } ?>

                        <?php if($option_combo_col_price_view) { ?>

                        <th><?php echo $text_col_price; ?></th>

                        <?php } ?>

                        <?php if($option_combo_col_total_price_view) { ?>

                        <th><?php echo $text_col_total_price; ?></th>

                        <?php } ?>

                        </tr>

                        <?php foreach($data as $product_option_combo) { ?>

                        <tr>

                            <?php if($option_combo_col_select_view) { ?>

                            <td><input type="radio" value="<?php echo $product_option_combo['product_option_combination_id']; ?>" name="option_combo" /></td>

                            <?php } ?>

                            <?php foreach($product_option_combo_headers as $header) { ?>

                                <?php if($header['option_id'] != $option_combo_table_split && isset($product_option_combo['option_values'][$header['option_id']])) { ?>

                                <td>

                                <?php if(count($product_option_combo['option_values'][$header['option_id']]) > 1) { ?>

                                    <ul>

                                    <?php foreach($product_option_combo['option_values'][$header['option_id']] as $val) { ?>

                                    <li><?php echo $val; ?></li>

                                    <?php } ?>

                                    </ul>

                                <?php } else { ?>

                                    <?php foreach($product_option_combo['option_values'][$header['option_id']] as $val) { ?>

                                    <?php echo $val; ?>

                                    <?php } ?>

                                <?php } ?>

                                </td>

                            <?php } else if($header['option_id'] != $option_combo_table_split) { ?>

                                <td>-</td>

                            <?php } ?>

                        <?php } ?>

                        <?php if($option_combo_col_quantity_view) { ?>

                            <td class="ta-center"><?php echo $product_option_combo['quantity']; ?></td>

                        <?php } ?>

                        <?php if($option_combo_col_points_view) { ?>

                            <td class="ta-right"><?php echo $product_option_combo['points']; ?></td>

                        <?php } ?>

                        <?php if($option_combo_col_total_points_view) { ?>

                            <td class="ta-right"><?php echo $product_option_combo['total_points']; ?></td>

                        <?php } ?>

                        <?php if($option_combo_col_price_view) { ?>

                            <td class="ta-right">

                                <?php echo $product_option_combo['price']; ?>

                                <?php if ($option_combo_extax_view) { ?>

                                <br /><span class="price-tax"><?php echo $text_tax; ?> <?php echo $product_option_combo['extax']; ?></span>

                                <?php } ?>

                            </td>

                        <?php } ?>

                        <?php if($option_combo_col_total_price_view) { ?>

                            <td class="ta-right">

                                <?php echo $product_option_combo['total_price']; ?>

                                <?php if ($option_combo_extax_view) { ?>

                                <br /><span class="price-tax"><?php echo $text_tax; ?> <?php echo $product_option_combo['total_extax']; ?></span>

                                <?php } ?>

                            </td>

                        <?php } ?>

                        </tr>

                        <?php } ?>

                    </table>

                    <br />

                <?php } ?>

                <?php } else { ?>

                <?php if(isset($product_option_combos)) { ?>

                <table class="option-combo">

                    <tr>

                    <?php if($option_combo_col_select_view) { ?>

                    <th></th>

                    <?php } ?>

                    <?php foreach($product_option_combo_headers as $header) { ?>

                        <th><?php echo $header['name']; ?></th>

                    <?php } ?>

                    <?php if($option_combo_col_quantity_view) { ?>

                    <th><?php echo $text_col_quantity; ?></th>

                    <?php } ?>

                    <?php if($option_combo_col_points_view) { ?>

                    <th><?php echo $text_col_points; ?></th>

                    <?php } ?>

                    <?php if($option_combo_col_total_points_view) { ?>

                    <th><?php echo $text_col_total_points; ?></th>

                    <?php } ?>

                    <?php if($option_combo_col_price_view) { ?>

                    <th><?php echo $text_col_price; ?></th>

                    <?php } ?>

                    <?php if($option_combo_col_total_price_view) { ?>

                    <th><?php echo $text_col_total_price; ?></th>

                    <?php } ?>

                    </tr>

                    <?php foreach($product_option_combos as $product_option_combo) { ?>

                    <tr>

                        <?php if($option_combo_col_select_view) { ?>

                        <td><input type="radio" value="<?php echo $product_option_combo['product_option_combination_id']; ?>" name="option_combo" /></td>

                        <?php } ?>

                        <?php foreach($product_option_combo_headers as $header) { ?>

                            <?php if(isset($product_option_combo['option_values'][$header['option_id']])) { ?>

                                <td>

                                <?php if(count($product_option_combo['option_values'][$header['option_id']]) > 1) { ?>

                                    <ul>

                                    <?php foreach($product_option_combo['option_values'][$header['option_id']] as $val) { ?>

                                    <li><?php echo $val; ?></li>

                                    <?php } ?>

                                    </ul>

                                <?php } else { ?>

                                    <?php foreach($product_option_combo['option_values'][$header['option_id']] as $val) { ?>

                                    <?php echo $val; ?>

                                    <?php } ?>

                                <?php } ?>

                                </td>

                            <?php } else { ?>

                                <td>-</td>

                            <?php } ?>

                        <?php } ?>

                    <?php if($option_combo_col_quantity_view) { ?>

                        <td class="ta-center"><?php echo $product_option_combo['quantity']; ?></td>

                    <?php } ?>

                    <?php if($option_combo_col_points_view) { ?>

                        <td class="ta-right"><?php echo $product_option_combo['points']; ?></td>

                    <?php } ?>

                    <?php if($option_combo_col_total_points_view) { ?>

                        <td class="ta-right"><?php echo $product_option_combo['total_points']; ?></td>

                    <?php } ?>

                    <?php if($option_combo_col_price_view) { ?>

                        <td class="ta-right">

                            <?php echo $product_option_combo['price']; ?>

                            <?php if ($option_combo_extax_view) { ?>

                            <br /><span class="price-tax"><?php echo $text_tax; ?> <?php echo $product_option_combo['extax']; ?></span>

                            <?php } ?>

                        </td>

                    <?php } ?>

                    <?php if($option_combo_col_total_price_view) { ?>

                        <td class="ta-right">

                            <?php echo $product_option_combo['total_price']; ?>

                            <?php if ($option_combo_extax_view) { ?>

                            <br /><span class="price-tax"><?php echo $text_tax; ?> <?php echo $product_option_combo['total_extax']; ?></span>

                            <?php } ?>

                        </td>

                    <?php } ?>

                    </tr>

                    <?php } ?>

                </table>

                <?php if($option_combo_col_select_view) { ?><div class="option-combo-warning"></div><?php } ?>

                <?php } ?>

                <?php } ?>

                <?php } ?>

            ]]></add>

		</operation>

		<operation>

			<search position="replace"><![CDATA[

                <input type="text" name="quantity" size="2" value="<?php echo $minimum; ?>" />

			]]></search>

			<add><![CDATA[

			    <input type="<?php if(isset($option_combo_quantity_box) && !$option_combo_quantity_box) { ?>hidden"<?php } else { ?>text<?php } ?>" name="quantity" size="2" value="<?php echo $minimum; ?>" />

            ]]></add>

		</operation>

		<operation>

			<search position="replace"><![CDATA[

                echo $text_qty;

			]]></search>

			<add><![CDATA[

                echo ((isset($option_combo_quantity_box) && $option_combo_quantity_box) || !isset($option_combo_quantity_box)) ? $text_qty : '';

            ]]></add>

		</operation>

		<operation>

			<search position="before"><![CDATA[

                for (i in json['error']

			]]></search>

			<add><![CDATA[

                if(!jQuery.isEmptyObject(json['error']))

                {

                     $('.option-combo-warning').html('<span class="error"><?php echo $error_option_combo; ?></span>');

                }

            ]]></add>

		</operation>

    </file>

    <file name="catalog/controller/checkout/cart.php">

		<operation>

			<search position="before" index="1"><![CDATA[

                $this->data['products'][] = array(

			]]></search>

			<add><![CDATA[

                $this->load->model('catalog/product');

                if(isset($result['product_id']))

                {

                    $product['product_id'] = $result['product_id'];

                }

                $option_combo_setting = $this->model_catalog_product->getProductOptionComboSetting($product['product_id']);

                $option_combo_quantity_box = isset($option_combo_setting['quantity_box']) ? $option_combo_setting['quantity_box'] : true;

            ]]></add>

		</operation>

		<operation>

			<search position="after" index="1"><![CDATA[

                $this->data['products'][] = array(

			]]></search>

			<add><![CDATA[

                'quantity_box' => $option_combo_quantity_box,

            ]]></add>

		</operation>

		<operation>

			<search position="before"><![CDATA[

                if (isset($this->request->post['option'])) {

			]]></search>

			<add><![CDATA[

                if(isset($this->request->post['option_combo']))

                {

                    $option_combo = $this->model_catalog_product->getProductOptionComboValues($this->request->post['product_id'], $this->request->post['option_combo']);



                    $option_combo_setting = $this->model_catalog_product->getProductOptionComboSetting($this->request->post['product_id']);

                    $option_combo_quantity_box = $option_combo_setting['quantity_box'];



                    if(!$option_combo_quantity_box)

                    {

                        $product_option_combo = $this->model_catalog_product->getProductOptionCombo($this->request->post['option_combo']);

                        if($product_option_combo['quantity'] > 0)

                        {

                            $quantity = $product_option_combo['quantity'];

                        }

                    }

                    if(!isset($this->request->post['option']))

                    {

                        $this->request->post['option'] = array();

                    }

                    $this->request->post['option'] += $option_combo;

                }

            ]]></add>

		</operation>

    </file>

    <file name="catalog/view/theme/*/template/checkout/cart.tpl">

        <operation>

			<search position="replace" index="1"><![CDATA[

                <td class="quantity"><input type="text"

			]]></search>

			<add><![CDATA[

                <td class="quantity"><input type="text"<?php if(!$product['quantity_box']) { ?> disabled="disabled"<?php } ?>

            ]]></add>

		</operation>

    </file>

    <file name="catalog/model/checkout/order.php">

        <operation>

			<search position="before" index="1"><![CDATA[

                foreach ($order_option_query->rows as $option) {

			]]></search>

			<add><![CDATA[

                $order_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order` WHERE order_id = '" . (int)$order_id . "'");



                $product_option_combo_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination poc WHERE poc.product_id = '" . (int)$order_product['product_id'] . "' AND poc.subtract = 1 AND poc.stock >= " . $order_product['quantity'] . " AND (poc.quantity = 0 || poc.quantity = " . $order_product['quantity'] . " || poc.quantity <= " . $order_product['quantity'] . ") AND poc.customer_group_id = '" . (int)$order_query->row['customer_group_id'] . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) ORDER BY poc.quantity DESC");



                foreach($product_option_combo_query->rows as $product_option_combo)

                {

                    $product_option_combo_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_combination_value pocv WHERE pocv.product_option_combination_id = '" . (int)$product_option_combo['product_option_combination_id'] . "'");



                    if(count($order_option_query->rows) == $product_option_combo_value_query->num_rows)

                    {

                        $count = 0;

                        $option_data = array();

                        foreach($order_option_query->rows as $order_option)

                        {

                            $product_option_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value WHERE product_option_value_id = '" . (int)$order_option['product_option_value_id'] . "'");

                            $option_data[] = $product_option_value_query->row;

                        }

                        foreach($product_option_combo_value_query->rows as $product_option_combo_value)

                        {

                            foreach($option_data as $data)

                            {

                                if($data['option_value_id'] == $product_option_combo_value['option_value_id'])

                                {

                                    $count++;

                                    break;

                                }

                            }

                        }

        		        if($count == count($option_data))

        		        {

                            //echo 'match';

                            $this->db->query("UPDATE " . DB_PREFIX . "product_option_combination SET stock = (stock - " . (int)$order_product['quantity'] . ") WHERE product_option_combination_id = '" . (int)$product_option_combo['product_option_combination_id'] . "' AND subtract = '1'");

                            break;

                        }

                    }

                }

			]]></add>

		</operation>

    </file>

</modification>